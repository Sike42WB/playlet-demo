import "pkg:/components/Services/Invidious/InvidiousService.bs"
import "pkg:/components/Services/Invidious/InvidiousToContentNode.bs"

@asynctask
function HomeScreenRowContentTask(input as object) as boolean
    contentNode = input.node
    invidiousNode = input.invidious

    service = new Invidious.InvidiousService(invidiousNode)
    response = service.MakeRequest(contentNode.feed)

    ' TODO: handle cancellation
    ' TODO: handle unauthenticated requests
    if response = invalid
        contentNode.loadState = "failed"
        contentNode.title += " (Failed to load)"
        return false
    end if

    instance = service.GetInstance()
    itemNodes = []
    for each item in response
        itemNode = InvidiousToRowCellContentNode(item, instance)
        if itemNode <> invalid
            itemNodes.Push(itemNode)
        end if
    end for

    contentNode.removeChildrenIndex(contentNode.getChildCount(), 0)
    contentNode.appendChildren(itemNodes)
    contentNode.loadState = "loaded"
    return true
end function

