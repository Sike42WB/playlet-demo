import "pkg:/components/Dialog/DialogUtils.bs"
import "pkg:/components/Navigation/Navigation.bs"
import "pkg:/source/utils/FocusManagement.bs"
import "pkg:/source/utils/Types.bs"

function Init()
    m.top.focusable = true
    m.profileRowList = m.top.FindNode("ProfileRowList")

    ' TODO:P0 remove test code
    m.randomTestNames = ["John", "Oumaima", "Bob", "Alice", "Charlie", "David", "Eve", "Frank", "Grace", "Hank", "Ivy", "Jack", "Kathy", "Larry", "Molly", "Nancy", "Oscar", "Patty", "Quincy", "Randy", "Sally", "Tom", "Ursula", "Vince", "Wendy", "Xander", "Yvonne", "Zack"]
end function

function OnNodeReady()
    SetNavigation(invalid, "back", m.navBar)
    SetNavigation(invalid, "left", m.navBar)

    m.profileRowList.observeFieldScoped("rowItemSelected", FuncName(OnRowItemSelected))
end function

function OnFocusChange() as void
    if not m.top.focus
        return
    end if
    NodeSetFocus(m.profileRowList, true)
end function

function OnkeyEvent(key as string, press as boolean) as boolean
    if NavigationKeyHandler(key, press).handled
        return true
    end if
    return false
end function

function OnRowItemSelected() as void
    index = m.profileRowList.rowItemSelected[1]
    row = m.profileRowList.content.GetChild(0)
    selectedProfile = row.GetChild(index)
    if selectedProfile.type = "login"
        dialog = CreateObject("roSGNode", "LoginDialog")
        dialog@.BindNode()
        m.top.getScene().dialog = dialog

        ' TODO:P0 remove test code
        newProfile = CreateObject("roSGNode", "ProfileContentNode")
        newProfile.username = m.randomTestNames[row.getChildCount() mod m.randomTestNames.count()]
        newProfile.serverUrl = "http://192.168.1.119:8095"
        row.insertChild(newProfile, 0)
        return
    end if

    DialogUtils.ShowDialog(`You selected ${selectedProfile.username}!`, "Profile Selected!")

    allProfiles = row.getChildren(-1, 0)
    for each profile in allProfiles
        profile.isSelected = false
    end for

    selectedProfile.isSelected = true
end function
