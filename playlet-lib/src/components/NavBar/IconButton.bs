import "pkg:/source/utils/Types.bs"
import "pkg:/source/utils/MathUtils.bs"

' Based on https://github.com/jellyfin/jellyfin-roku/blob/unstable/components/IconButton.brs
function init()
    m.buttonBackground = m.top.findNode("buttonBackground")
    m.buttonIcon = m.top.findNode("buttonIcon")
    m.buttonText = m.top.findNode("buttonText")

    m.top.observeField("background", FuncName(onBackgroundChanged))
    m.top.observeField("icon", FuncName(onIconChanged))
    m.top.observeField("text", FuncName(onTextChanged))
    m.top.observeField("height", FuncName(onHeightChanged))
    m.top.observeField("width", FuncName(onWidthChanged))
    m.top.observeField("padding", FuncName(onPaddingChanged))
end function

function OnFocusChange()
    if m.top.focus
        m.buttonBackground.blendColor = m.top.focusBackground
    else
        m.buttonBackground.blendColor = m.top.background
    end if
    m.buttonBackground.visible = m.top.focus
    m.buttonText.visible = m.top.focus
end function

function onBackgroundChanged()
    m.buttonBackground.blendColor = m.top.background
end function

function onIconChanged()
    m.buttonIcon.uri = m.top.icon
end function

function onTextChanged()
    m.buttonText.text = m.top.text
end function

function setIconSize()
    height = m.top.height
    width = m.top.width
    if height > 0 and width > 0
        iconSize = MathUtils.Min(height, width) - m.top.padding
        m.buttonIcon.height = iconSize
        m.buttonIcon.width = iconSize

        m.buttonIcon.translation = [((width - iconSize) / 2), ((height - iconSize) / 2)]
        m.buttonText.translation = [-5, height]
        m.buttonText.width = width + 10
    end if
end function

function onHeightChanged()
    m.buttonBackground.height = m.top.height
    setIconSize()
end function

function onWidthChanged()
    m.buttonBackground.width = m.top.width - 10
    m.buttonBackground.translation = [5, 0]
    setIconSize()
end function

function onPaddingChanged()
    setIconSize()
end function
