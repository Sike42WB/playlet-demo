import "pkg:/source/utils/FocusManagement.bs"
import "pkg:/source/utils/Types.bs"

' TODO:P1
' - Add support for Profile icon
' - Add screen offset when navbar is selected
' - Add sliding animation for the side bar
' - NavBar flexible width based on text size

function Init()
    m.top.focusable = true
    m.sideBar = m.top.findNode("SideBar")
    m.itemsList = m.top.findNode("ItemsList")
end function

function OnNodeReady()
    m.lastItemFocused = m.itemsList.itemFocused
    m.top.observeField("focusedChild", FuncName(OnFocusedChildChange))
    m.itemsList.observeField("itemFocused", FuncName(OnItemFocused))
    initialFocus = m.top.initialFocus
    if initialFocus > -1
        m.itemsList.jumpToItem = initialFocus
    end if
end function

function OnFocusedChildChange()
    m.sideBar.visible = m.top.isInFocusChain()
end function

function OnFocusChange() as void
    if not m.top.focus
        return
    end if
    NodeSetFocus(m.itemsList, true)
end function

function OnItemFocused() as void
    index = m.itemsList.itemFocused
    item = GetItem(index)
    if item = invalid
        return
    end if

    if m.lastItemFocused <> index
        UnfocusItem(m.lastItemFocused)
    end if
    m.lastItemFocused = index

    m.appController@.ShowRootScreen(item.screen)
end function

function UnfocusItem(index as integer) as void
    item = GetItem(index)
    if item = invalid
        return
    end if

    m.appController@.HideRootScreen(item.screen)
end function

function onKeyEvent(key as string, press as boolean) as boolean
    if key <> "right" or not press
        return false
    end if

    item = GetItem(m.itemsList.itemFocused)
    if item = invalid
        return false
    end if

    screen = m.appController@.GetRootScreen(item.screen)
    if screen = invalid or not screen.focusable
        return false
    end if

    NodeSetFocus(screen, true)
    return true
end function

function GetItem(index as integer) as dynamic
    content = m.itemsList.content
    if content = invalid
        return invalid
    end if

    childCount = content.getChildCount()
    if childCount = 0 or index < 0 or index >= childCount
        return invalid
    end if

    return content.getChild(index)
end function
