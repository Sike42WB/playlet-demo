import "pkg:/source/utils/FocusManagement.bs"
import "pkg:/source/utils/Types.bs"

function Init()
end function

function OnNodeReady()
    PopulateButtons()
    m.top.observeField("focusedChild", FuncName(OnFocusedChildChange))
    m.top.observeField("items", FuncName(PopulateButtons))
end function

function OnFocusedChildChange()
    m.top.focusIndex = m.top.focusIndex
end function

function PopulateButtons() as void
    buttonCount = m.buttonGroup.getChildCount()
    if buttonCount > 0
        m.buttonGroup.removeChildrenIndex(buttonCount, 0)
    end if

    if m.top.items = invalid
        m.top.focusable = false
        return
    end if

    navBarItems = m.top.items.getChildren(-1, 0)

    buttons = []
    for each item in navBarItems
        button = CreateObject("roSGNode", "IconButton")
        button.background = "#242424FF"
        button.focusBackground = "#FF1C30FF"
        button.height = 50
        button.width = 90

        button.icon = item.icon
        button.text = item.text
        button.padding = item.padding

        buttons.push(button)
    end for
    m.buttonGroup.appendChildren(buttons)

    m.top.focusable = buttons.Count() > 0

    m.top.focusIndex = m.top.focusIndex

    CenterButtons()
end function

function CenterButtons()
    parent = m.buttonGroup.getParent()
    parentWidth = parent.width
    parentHeight = parent.height

    rect = m.buttonGroup.boundingRect()

    m.buttonGroup.translation = [parentWidth / 2 - rect.width / 2, parentHeight / 2 - rect.height / 2]
end function

function onKeyEvent(key as string, press as boolean) as boolean
    if not press
        return false
    end if
    if key = "down"
        i = m.top.focusIndex
        target = i + 1
        if target >= m.buttonGroup.getChildCount()
            return false
        end if
        m.top.focusIndex = target
        return true
    else if key = "up"
        i = m.top.focusIndex
        target = i - 1
        if target < 0
            return false
        end if
        m.top.focusIndex = target
        return true
    else if key = "right"
        if m.top.items = invalid or m.top.focusIndex = -1 or m.top.focusIndex >= m.top.items.getChildCount()
            return false
        end if
        navBarItem = m.top.items.getChild(m.top.focusIndex)
        screen = m.appController@.GetRootScreen(navBarItem.screen)
        if screen = invalid
            return false
        end if
        if not screen.focusable
            return false
        end if
        NodeSetFocus(screen, true)
        return true
    end if

    return false
end function

function OnFocusIndexChange() as void
    if m.top.items = invalid
        return
    end if

    buttonCount = m.buttonGroup.getChildCount()
    if buttonCount = 0
        return
    end if
    focusIndex = m.top.focusIndex
    if focusIndex < 0
        m.top.focusIndex = 0
        return
    end if
    if focusIndex >= buttonCount
        m.top.focusIndex = buttonCount - 1
        return
    end if

    navBarItems = m.top.items.getChildren(-1, 0)

    buttons = m.buttonGroup.getChildren(-1, 0)
    for i = 0 to buttonCount - 1
        if i <> focusIndex
            buttons[i].focus = false
            m.appController@.HideRootScreen(navBarItems[i].screen)
        end if
    end for
    if focusIndex <> -1
        m.buttonGroup.getChild(focusIndex).focus = m.top.hasFocus()
        m.appController@.ShowRootScreen(navBarItems[focusIndex].screen)
    end if
end function
