import "pkg:/source/roku_modules/log/LogMixin.brs"
import "pkg:/source/utils/FocusManagement.bs"
import "pkg:/source/utils/Types.bs"

function Init()
    m.log = new log.Logger("ChannelView")

    m.banner = m.top.findNode("banner")
    m.thumbnail = m.top.findNode("thumbnail")
    m.authorLabel = m.top.findNode("authorLabel")
    m.rowList = m.top.FindNode("rowList")

    m.banner.ObserveField("loadStatus", FuncName(OnBannerLoadStatus))
end function

function OnNodeready()
    m.rowList@.BindNode(invalid)
end function

function OnFocusChange() as void
    if not m.top.focus
        return
    end if

    NodeSetFocus(m.rowList, true)
end function

function OnContentSet() as void
    content = m.top.content
    if content = invalid
        return
    end if

    ' NOTE: "_author" not "author". See PlaylistContentNode.xml for explanation.
    m.authorLabel.text = content._author
    m.banner.uri = content.banner
    m.thumbnail.uri = content.thumbnail

    m.rowList.content = content

    content@.LoadChannel(m.invidious)
end function

function OnkeyEvent(key as string, press as boolean) as boolean
    if press = false
        return false
    end if

    if key = "back"
        Close()
        return true
    end if
    return false
end function

function Close()
    m.appController@.PopScreen(invalid)
end function

function OnBannerLoadStatus() as void
    status = m.banner.loadStatus
    if status <> "ready"
        return
    end if

    aspect = m.banner.bitmapWidth / m.banner.bitmapHeight
    m.banner.height = m.banner.width / aspect
end function
