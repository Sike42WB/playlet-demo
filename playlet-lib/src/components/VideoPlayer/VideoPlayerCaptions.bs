import "pkg:/components/VideoPlayer/VideoPlayerCaptionsTask.bs"

function SetCaptions(metadata as object, videoPlayer as object, contentNode as object) as void
    if metadata.captions.Count() = 0
        return
    end if
    isoLanguageList = ParseJson(ReadAsciiFile("libpkg:/config/ISO-639-1-to-ISO-639-2T.json"))
    instance = InvidiousSettings.GetCurrentInstance()

    subtitleTracks = []

    for each caption in metadata.captions
        subtitleTracks.Push({
            Description: caption.label,
            Language: isoLanguageList[caption.language_code] ?? caption.language_code,
            TrackName: instance + caption.url
        })
    end for
    contentNode.ClosedCaptions = True
    contentNode.SubtitleTracks = subtitleTracks

    ' Captions are rate limited https://github.com/iv-org/invidious/issues/2567
    ' We loop through a list of backup instances hoping to find working subtitles.
    ' Searching for a working caption could cause a delay in the video player start.
    ' This is why it is behind a feature flag.
    #if CAPTION_INSTANCE_SEARCH
        StartAsyncTask(VideoPlayerCaptionsTask, {
            videoId: metadata.videoId,
            instance: instance,
            subtitleTracks: subtitleTracks
        }, OnVideoPlayerCaptionsTaskResults)
    #end if
end function

function OnVideoPlayerCaptionsTaskResults(output as object) as void
    changed = output.result.changed
    if not changed
        return
    end if

    videoId = output.result.videoId
    if m.top.videoId <> videoId
        return
    end if

    state = m.top.state
    contentNode = m.top.content
    contentNode.Update({
        SubtitleTracks: output.result.subtitleTracks
    })
    if state = "buffering" or state = "playing"
        m.top.control = "play"
    end if
end function
