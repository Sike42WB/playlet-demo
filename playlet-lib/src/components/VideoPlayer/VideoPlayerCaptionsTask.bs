import "pkg:/source/roku_modules/rokurequests/Requests.brs"
import "pkg:/source/services/InvidiousSettings.bs"

@asynctask
function VideoPlayerCaptionsTask(input as object) as object
    originalInstance = input.instance
    subtitleTracks = input.subtitleTracks
    if subtitleTracks.Count() = 0
        return {
            changed: false
        }
    end if

    track = subtitleTracks[0]
    url = track.TrackName

    if IsValidSubtitleTrack(url)
        return {
            changed: false
        }
    end if

    failedInstances = {}
    failedInstances[originalInstance] = true

    instances = InvidiousSettings.GetCurrentInstances()
    for each instance in instances
        if failedInstances[instance] = true
            continue for
        end if

        instanceUrl = url.Replace(originalInstance, instance)
        if IsValidSubtitleTrack(instanceUrl)
            for i = 0 to subtitleTracks.Count() - 1
                subtitleTracks[i].TrackName = subtitleTracks[i].TrackName.Replace(originalInstance, instance)
            end for

            return {
                changed: true,
                videoId: input.videoId,
                subtitleTracks: subtitleTracks
            }
        else
            failedInstances[instance] = true
        end if

    end for

    return {
        changed: false
    }
end function

function IsValidSubtitleTrack(url as string) as boolean
    response = Requests().get(url, { parseJson: false })
    ' A popular instance will return a valid format
    '   WEBVTT
    '   Kind: captions
    '   Language: en
    ' But won't include any caption items
    return response.ok and response.text.StartsWith("WEBVTT") and response.text.len() > 50
end function
