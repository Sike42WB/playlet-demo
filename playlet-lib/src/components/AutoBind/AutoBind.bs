function AutoBindSceneGraph() as void
    if not m.global.hasField("AutoBindNodes")
        m.global.addField("AutoBindNodes", "nodearray", false)
    end if

    nodes = m.global.AutoBindNodes
    m.global.AutoBindNodes = []

    for each node in nodes
        node@.BindNodeFieldsAndProps(invalid)
    end for

    for each node in nodes
        node.binding_fields_done = true
    end for
end function

function BindNodeFieldsAndProps(unused as dynamic) as void
    node = m.top
    bindings = node.bindings
    if bindings = invalid
        return
    end if

    if bindings.fields <> invalid
        for each fieldId in bindings.fields
            reference = FindNodeFromPath(node, bindings.fields[fieldId])
            if reference <> invalid
                node[fieldId] = reference
            end if
        end for
    end if

    if bindings.childProps <> invalid
        for each nodeId in bindings.childProps
            child = node.findNode(nodeId)
            if child = invalid
                continue for
            end if

            childProps = bindings.childProps[nodeId]
            for each childPropId in childProps
                reference = FindNodeFromPath(child, childProps[childPropId])
                if reference <> invalid
                    child[childPropId] = reference
                end if
            end for
        end for
    end if
end function

function FindNodeFromPath(root as object, path as string) as object
    node = root

    if path.StartsWith("/")
        node = node.getScene()
        path = path.Mid(1)
    end if

    pathParts = path.Tokenize("/")

    for i = 0 to pathParts.Count() - 1
        if node = invalid
            return invalid
        end if
        if pathParts[i] = "."
            continue for
        end if
        if pathParts[i] = ".."
            node = node.getParent()
            continue for
        end if
        node = node.findNode(pathParts[i])
    end for

    if root.isSameNode(node)
        ' if a node is referencing itself, it's probably a mistake
        return invalid
    end if

    return node
end function

function RegisterAutoBind()
    if not m.global.hasField("AutoBindNodes")
        m.global.addField("AutoBindNodes", "nodearray", false)
    end if
    nodes = m.global.AutoBindNodes
    newNodes = [m.top]
    newNodes.append(nodes)
    m.global.AutoBindNodes = newNodes
end function

function OnBindingFieldsDone()
    types = m.top.getFieldTypes()
    for each key in types
        if m.DoesExist(key)
            continue for
        end if

        if types[key] <> "node"
            continue for
        end if

        node = m.top.getField(key)
        m[key] = node
    end for

    if m.top.hasField("binding_done")
        m.top.binding_done = true
    end if
end function
