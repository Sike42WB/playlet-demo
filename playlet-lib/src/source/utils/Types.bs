function IsString(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifString") <> invalid
end function

function IsArray(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifArray") <> invalid
end function

function IsBool(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifBoolean") <> invalid
end function

function IsAssociativeArray(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifAssociativeArray") <> invalid
end function

function IsByteArray(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifByteArray") <> invalid
end function

function IsInt(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifInt") <> invalid
end function

function IsDouble(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifDouble") <> invalid
end function

function IsFunction(obj as dynamic) as boolean
    return obj <> invalid and GetInterface(obj, "ifFunction") <> invalid
end function

function ValidString(obj as object) as string
    if obj <> invalid and GetInterface(obj, "ifString") <> invalid
        return obj
    else
        return ""
    end if
end function

function ValidInt(obj as dynamic) as integer
    if obj <> invalid and GetInterface(obj, "ifInt") <> invalid
        return obj
    else
        return 0
    end if
end function

function ValidBool(obj as dynamic) as boolean
    if obj <> invalid and GetInterface(obj, "ifBoolean") <> invalid
        return obj
    else
        return false
    end if
end function

function FuncName(func as function) as string
    return (LCase(`${func}`)).replace("function:", "").trim()
end function
