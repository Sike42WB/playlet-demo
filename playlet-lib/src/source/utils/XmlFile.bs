class XmlFile

    public xmlElement

    function new()
        m.xmlElement = CreateObject ("roXMLElement")
    end function

    function parse(xml as string) as boolean
        return m.xmlElement.parse(xml)
    end function

    function stringify(gen_header = true as boolean) as string
        return m.xmlElement.GenXML(gen_header)
    end function

    function getRoot() as object
        return m.xmlElement
    end function

    function setElement(element as object, name as string, attributes = invalid as object) as object
        element.SetName(name)
        if attributes <> invalid
            for each key in attributes
                element.AddAttribute(key, attributes[key])
            end for
        end if
        return element
    end function

    function addNewElement(parent as object, name as string, attributes = invalid as object) as object
        newChild = parent.AddBodyElement()
        newChild.SetName(name)
        if attributes <> invalid
            for each key in attributes
                newChild.AddAttribute(key, attributes[key])
            end for
        end if
        return newChild
    end function

    function addXmlElement(parent as object, child as object) as object
        newChild = parent.AddBodyElement()
        newChild.SetName(child.GetName())
        newChild.AddText(child.GetText())
        attributes = child.GetAttributes()
        for each key in attributes
            newChild.AddAttribute(key, attributes[key])
        end for
        body = child.GetBody()
        if body = invalid
        else if GetInterface(body, "ifString") <> invalid
            newChild.SetBody(body)
        else if GetInterface(body, "ifList") <> invalid
            for each subChild in body
                m.AddXmlElement(newChild, subChild)
            end for
        end if
        return newChild
    end function
end class
