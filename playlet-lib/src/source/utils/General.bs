import "pkg:/source/utils/StringUtils.bs"

function GetLocalIpAddress() as dynamic
    if m.ipAddress = invalid or m.ipAddress = ""
        di = CreateObject("roDeviceInfo")
        ips = di.GetIPAddrs()
        for each ip in ips
            m.ipAddress = ips[ip]
            return m.ipAddress
        end for
    end if
    return m.ipAddress
end function

function GetUserCountryCode() as string
    if m.countryCode = invalid or m.countryCode = ""
        m.countryCode = CreateObject("roDeviceInfo").GetUserCountryCode()
    end if
    return m.countryCode
end function

function GetAppInfo() as object
    if m.appInfo = invalid
        appInfo = CreateObject("roAppInfo")
        m.appInfo = {
            id: appInfo.GetID(),
            version: appInfo.GetVersion(),
            git_commit_hash: appInfo.GetValue("git_commit_sha"),
            lib_version: GetLibVersion(),
            lib_git_commit_hash: GetLibGitCommitHash()
        }
    end if
    return m.appInfo
end function

function GetLibVersion() as string
    values = GetLibManifestValues()

    Major = values["major_version"].toInt()
    Minor = values["minor_version"].toInt()
    Build = values["build_version"].toInt()

    return `${Major}.${Minor}.${Build}`
end function

function GetLibGitCommitHash() as string
    values = GetLibManifestValues()

    if values.doesexist("git_commit_sha")
        return values["git_commit_sha"]
    end if
    return ""
end function

function GetLibManifestValues() as object
    if m.linManifestValues = invalid
        libManifest = ReadAsciiFile("libpkg:/manifest")
        lines = libManifest.Tokenize(UnixNL())
        values = {}
        for each line in lines
            if line.left(1) = "#"
                continue for
            end if
            keyValuePair = line.Tokenize("=")
            if keyValuePair.Count() <> 2
                continue for
            end if

            values[keyValuePair[0]] = keyValuePair[1]
        end for
        m.linManifestValues = values
    end if
    return m.linManifestValues
end function

function GetDeviceInfo() as object
    if m.deviceInfo = invalid
        devInfo = CreateObject("roDeviceInfo")
        m.deviceInfo = {
            model: devInfo.GetModel(),
            model_display_name: devInfo.GetModelDisplayName(),
            model_type: devInfo.GetModelType(),
            model_details: devInfo.GetModelDetails(),
            os_version: devInfo.GetOSVersion(),
            display_type: devInfo.GetDisplayType(),
            display_mode: devInfo.GetDisplayMode(),
            display_aspect_ratio: devInfo.GetDisplayAspectRatio(),
            display_size: devInfo.GetDisplaySize(),
            video_mode: devInfo.GetVideoMode(),
            ui_resolution: devInfo.GetUIResolution(),
            graphics_platform: devInfo.GetGraphicsPlatform(),
            internet_status: devInfo.GetInternetStatus()
        }
    end if
    return m.deviceInfo
end function

function ArrayIndexOf(array as object, value as string) as integer
    for i = 0 to array.Count() - 1
        if array[i] = value
            return i
        end if
    end for
    return -1
end function
