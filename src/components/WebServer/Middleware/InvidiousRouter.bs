namespace Http

    class InvidiousRouter extends HttpRouter

        function new()
            super()

            ' TODO: use POST once supported
            m.Get("*", function(context as object) as boolean
                request = context.request
                response = context.response

                route = request.uri
                if not route.StartsWith("/invidious/set-instances")
                    return false
                end if

                components = WebUtils.UrlQueryComponents(route)

                instances = []
                if components.DoesExist("instances")
                    instances = components["instances"]
                    if GetInterface(instances, "ifArray") = invalid
                        instances = [instances]
                    end if
                end if

                for i = 0 to instances.Count() - 1
                    if instances[i].right(1) = "/"
                        instances[i] = instances[i].left(instances[i].len() - 1)
                    end if
                end for

                InvidiousSettings.SetRegistryInstances(instances)
                response.Default(200, "OK")
                return true
            end function)

            m.Get("*", function(context as object) as boolean
                request = context.request
                response = context.response
                server = context.server

                route = request.uri
                if not route.StartsWith(Invidious.TOKEN_CALLBACK)
                    return false
                end if

                components = WebUtils.UrlQueryComponents(route)
                if components["token"] <> invalid and components["referer"] <> invalid
                    ' Token is encoded twice for some reason
                    token = WebUtils.UrlUnescape(components["token"]).DecodeUriComponent()
                    referer = WebUtils.UrlUnescape(components["referer"])
                    InvidiousSettings.SetAuthToken(token, referer)
                    server.task.top.login = true
                end if
                response.Redirect("/", 302)
                return true
            end function)
        end function

    end class

end namespace
